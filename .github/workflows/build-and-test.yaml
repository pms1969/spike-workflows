name: build-and-test

on:
  workflow_dispatch:
    inputs:
      pull_request:
        type: string
        required: true
        description: The PR number.
      token:
        type: string
        required: true
        description: The token to use for testing. Short lived.
      uri:
        type: string
        required: true
        description: The uri to test against. Short lived.

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout for SHA
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.inputs.pull_request }}/head"

      - name: Get SHA
        id: vcs
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Fork based /LGTM checkout
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.inputs.pull_request }}/merge"

      - name: Check Run in progress
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date();
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: "${{ steps.vcs.outputs.sha }}",
              name: "Integration Testing",

              started_at: date.toISOString(),
              external_id: "${{ github.run_id }}",
              status: "in_progress",

              output: {
                title: "Integration Test Results",
                summary: "Build started",
                text: "Just gonna do stuff ya know."
              }

            });

      - name: Run tests on DEVELOP branch
        id: run_tests
        run: |
          echo "env variables for DEVELOP have been set"
          echo "Changing directory into sdk directory"
          echo URI $API_URL
          echo TOKEN $ACCESS_TOKEN
          echo INPUT_URI $INPUT_API_URL
          echo INPUT_TOKEN $INPUT_ACCESS_TOKEN
          echo
          echo
          cat README.md
        env:
          INPUT_API_URL: ${{ github.event.inputs.uri }}
          INPUT_ACCESS_TOKEN: ${{ github.event.inputs.token }}

      - name: Complete check run
        if: always()
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date();
            const resp = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: "${{ github.run_id }}"
            });

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: "${{steps.vcs.outputs.sha}}",
              name: "Integration Testing",

              completed_at: date.toISOString(),

              external_id: "${{ github.run_id }}",
              details_url: resp.data.jobs[0].html_url,
              status: "completed",
              conclusion: "${{steps.run_tests.conclusion}}",

              output: {
                title: "Integration Tests",
                summary: "Build completed and ${{steps.run_tests.conclusion}}",
                text: "Visit the action link to see the result of this step."
              }
            });
