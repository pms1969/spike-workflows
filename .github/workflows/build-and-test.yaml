name: build-and-test

on:
  workflow_dispatch:
    inputs:
      pull_request:
        type: string
        required: true
        description: The PR number.
      token:
        type: string
        required: true
        description: The token to use for testing. Short lived.
      uri:
        type: string
        required: true
        description: The uri to test against. Short lived.

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    # environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Fork based /LGTM checkout
        id: vcs
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.inputs.pull_request }}/merge"
        run: echo "::set-output name=sha::$((git rev-parse HEAD))"

      - name: Check Run in progress
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date();
            const check = await github.checks.create({
              owner: "${{ steps.vars.outputs.owner }}",
              repo: "${{ steps.vars.outputs.repo }}",
              name: "Integration Testing",
              head_sha: "${{ inputs.sha }}",

              started_at: date.toISOString(),
              external_id: "${{ github.run_id }}",
              status: "in_progress",

              output: {
                title: "Integration Test Results",
                summary: "Build started",
                text: "Just gonna do stuff ya know."
              }

            });

      - name: Run tests on DEVELOP branch
        id: run_tests
        env:
          API_URL: ${{ secrets.URI }}
          ACCESS_TOKEN: ${{ secrets.TOKEN }}
          INPUT_API_URL: ${{ github.event.inputs.uri }}
          INPUT_ACCESS_TOKEN: ${{ github.event.inputs.token }}
        run: |
          echo "env variables for DEVELOP have been set"
          echo "Changing directory into sdk directory"
          echo URI $API_URL
          echo TOKEN $ACCESS_TOKEN
          echo INPUT_URI $INPUT_API_URL
          echo INPUT_TOKEN $INPUT_ACCESS_TOKEN
          echo
          echo
          cat README.md

      - name: "Comment on PR"
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: process.env.PR_NUM,
              body: 'Thank you for the PR!  It has now been tested.'
            });
        env:
          PR_NUM: ${{ github.event.inputs.pull_request }}

      - name: Complete check run
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date();
            const check = await github.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.steps.vcs.output.sha,
              name: "Integration Testing",

              completed_at: date.toISOString(),

              status: context.steps.run_tests.outcome,
              conclusion: context.steps.run_tests.conclusion,

              output: {
                title: "Integration Tests",
                summary: "Build successful",
                text: "Success or failure."
              }
            });
